{
  "version": 3,
  "sources": ["../../stacks/stack.js", "../../stacks/index.js"],
  "sourcesContent": ["import {\n  Api,\n  Table,\n  Cron,\n} from '@serverless-stack/resources';\n\nexport function stack({ stack }) {\n  const avy = new Table(stack, 'avy', {\n    fields: {\n      day: 'string',\n      sk: 'string'\n    },\n    primaryIndex: {\n      partitionKey: 'day',\n      sortKey: 'sk'\n    },\n  });\n  const dash = new Api(stack, 'dash', {\n    routes: {\n      'GET /': {\n\t\t\t\tfunction: {\n\t\t\t\t\thandler: 'functions/dash.main',\n\t\t\t\t\tpermissions: [avy],\n\t\t\t\t\tenvironment: { avyTableName: avy.tableName }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n  });\n  new Cron(stack, \"getAvyForecast\", {\n    // schedule: \"rate(1 minute)\", // for testing\n    //schedule: \"rate(30 minutes)\", // for prod this needs to only run every 15 mins from 5 am to 8 am MST during the season Oct - June?\n\t\tschedule: 'cron(0/15 10-15 * 10-6 ? *)',\n    job: {\n      function: {\n        handler: \"functions/getAvyForecast.main\",\n        permissions: [avy],\n        environment: { avyTableName: avy.tableName }\n      }\n    },\n    enabled: false\n  });\n\n  stack.addOutputs({\n    ApiEndpoint: dash.url,\n  });\n}\n", "import { stack } from './stack';\nimport { App } from '@serverless-stack/resources';\n// import * as dotenv from 'dotenv';\n\n// dotenv.config({ debug: true, override: true });\n\n/**\n * @param {App} app\n */\nexport default function (app) {\n  app.setDefaultFunctionProps({\n    runtime: 'nodejs16.x',\n    srcPath: 'services',\n    bundle: {\n      format: 'esm',\n    },\n  });\n  app.stack(stack);\n}\n"],
  "mappings": ";;;;;AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEA,SAAS,MAAM,EAAE,OAAAA,OAAM,GAAG;AAC/B,QAAM,MAAM,IAAI,MAAMA,QAAO,OAAO;AAAA,IAClC,QAAQ;AAAA,MACN,KAAK;AAAA,MACL,IAAI;AAAA,IACN;AAAA,IACA,cAAc;AAAA,MACZ,cAAc;AAAA,MACd,SAAS;AAAA,IACX;AAAA,EACF,CAAC;AACD,QAAM,OAAO,IAAI,IAAIA,QAAO,QAAQ;AAAA,IAClC,QAAQ;AAAA,MACN,SAAS;AAAA,QACX,UAAU;AAAA,UACT,SAAS;AAAA,UACT,aAAa,CAAC,GAAG;AAAA,UACjB,aAAa,EAAE,cAAc,IAAI,UAAU;AAAA,QAC5C;AAAA,MACD;AAAA,IACD;AAAA,EACA,CAAC;AACD,MAAI,KAAKA,QAAO,kBAAkB;AAAA,IAGlC,UAAU;AAAA,IACR,KAAK;AAAA,MACH,UAAU;AAAA,QACR,SAAS;AAAA,QACT,aAAa,CAAC,GAAG;AAAA,QACjB,aAAa,EAAE,cAAc,IAAI,UAAU;AAAA,MAC7C;AAAA,IACF;AAAA,IACA,SAAS;AAAA,EACX,CAAC;AAED,EAAAA,OAAM,WAAW;AAAA,IACf,aAAa,KAAK;AAAA,EACpB,CAAC;AACH;AAvCgB;;;ACLhB,SAAS,WAAW;AAQL,SAAR,eAAkB,KAAK;AAC5B,MAAI,wBAAwB;AAAA,IAC1B,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,QAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,MAAI,MAAM,KAAK;AACjB;AATO;",
  "names": ["stack"]
}
